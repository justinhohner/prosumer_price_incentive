diff --git a/ssc/cmod_belpe.cpp b/ssc/cmod_belpe.cpp
index 137450ad9..30a1de96b 100644
--- a/ssc/cmod_belpe.cpp
+++ b/ssc/cmod_belpe.cpp
@@ -1027,7 +1027,7 @@ public:
         }
 
         //SCALING FUNCTION STARTS HERE********************************************************************************************************************************************************************
-        ssc_number_t monthly_load[12], monthly_hvac_load[12];
+        /*ssc_number_t monthly_load[12], monthly_hvac_load[12];
         std::vector<double> monthly_diff(12), monthly_scale(12);
         //compute monthly load sums for scaling
         monthly_sums(load, monthly_load);
@@ -1066,16 +1066,17 @@ public:
         }
         //new error checking from Sara
         std::vector<double> NewScale(12);
-        for (int z = 0; z < 12; z++)
-        {
-            NewScale[z] = (monthly_load[z] - monthly_util[z] * 1000 - x_hvac[z] * monthly_hvac_load[z]) / monthly_load[z]; //monthly utility is in kWh
-            /*
-            newscaledebug[z] = NewScale[z];
-            monthlytotelecactualdebug[z] = monthly_util[z];
-            monthlytotelec_lpgendebug[z] = monthly_load[z];
-            monthlyhvac_lpgendebug[z] = monthly_hvac_load[z];
-            */
-        }
+	*/
+        //for (int z = 0; z < 12; z++)
+        //{
+        //    NewScale[z] = (monthly_load[z] - monthly_util[z] * 1000 - x_hvac[z] * monthly_hvac_load[z]) / monthly_load[z]; //monthly utility is in kWh
+        //    /*
+        //    newscaledebug[z] = NewScale[z];
+        //    monthlytotelecactualdebug[z] = monthly_util[z];
+        //    monthlytotelec_lpgendebug[z] = monthly_load[z];
+        //    monthlyhvac_lpgendebug[z] = monthly_hvac_load[z];
+        //    */
+        //}
         //end new error checking from Sara
 
         //loop through 8760 and scale according to what month it's in
@@ -1083,13 +1084,14 @@ public:
         int nneg = 0;
         for (int i = 0; i < 8760; i++)
         {
-            if (monthly_hvac_load[month[i]] > 0)
+            /*if (monthly_hvac_load[month[i]] > 0)
                 load[i] = (ssc_number_t)(load[i] * (1 - NewScale[month[i]]) - x_hvac[month[i]] * hvac_load[i]); //new from Sara 11/21
             else
                 load[i] = load[i] * (ssc_number_t)(1 - monthly_scale[month[i]]);
 
             if (monthly_util[month[i]] == 0) //set all loads for the month to zero if the input month was zero
                 load[i] = 0;
+		*/
 
 
             if (load[i] < 0) //error checking for negative loads
